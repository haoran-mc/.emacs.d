#+STARTUP: showall noindent

* 如何安排我的 emacs 快捷键
*osx:*

#+begin_example
  +----------+----------+-----------+
  | control  | option   | command   |
  +----------+----------+-----------+
      ↓
  +----------+----------+-----------+
  | control  | super    | meta      |
  +----------+----------+-----------+
#+end_example

| keys                  | desc                                                                                            |
|-----------------------+-------------------------------------------------------------------------------------------------|
| C-?                   | 移动、编辑等重要按键，尽量不修改，mac 系统中的一些按键借鉴了 emacs，在 mac 系统中也可以使用     |
| C-x                   | 系统快捷键，emacs 原生的快捷键，一般不修改以 C-x 为前缀的快捷键                                 |
| C-c C-c               | 这是每个 major-mode 的按键                                                                      |
| C-c ?                 | C-c 后跟一个字母是 emacs 为用户保留的按键绑定，用户应该尽量将按键绑定到这里（C-c ? 会打断编辑） |
| C-c C-?               | 显然 `C-c ?` 这种并不能足以用户使用，在保证不会影响已有快捷键的情况下使用 C-c C-?               |
| M-?                   | C-? > C-c ? > M-? （强化编辑、搜索）                                                            |
| s-?                   | 功能                                                                                            |
| C-s-? C-M-? s-M-? ... | 慢捷键，补充                                                                                    |



- 不可或缺的 M-?: M-w M-r M-; M-x M-v M-< M->
- 单词操作 M-?: 
不像 vim 的 leader，emacs 的功能按键很少很奢侈，vim 中少被使用 ALT 在 emacs 中是一个重要位置。这么一个按键绑定的却是一些不常用的操作，是否考虑将 meta 按键绑定到 option，super 绑定到 command，相同绑定 super 尽量和 meta 的功能相似。
在 vim 中都很少使用 word 的移动操作，emacs 我觉得也会很少使用。
而且把 meta 放在 option 上，还可以通过 C-[。

建议冷落 C-x，因为很容易会 C-x C-c 弄混，心理负担很重。


C-w 不像换了，因为剪切的需求还是很大的，用 C-c w hjkl 来操作窗口。






* COMMENT 以 C-c 为前缀的快捷键

- C-c a         org-agenda
- C-c b         lsp-bridge 返回
- C-c e +       eshell 的前缀
- C-c i +       插入文本（这个按键保留下来了，插入模式下只能使用 C-c ?）
- C-c j         lsp-bridge 前往函数定义处
- C-c r         lsp-bridge 前往函数使用处
- C-c p +       projectile
- C-c s         tab-switch
- C-c t +       hl-todo
- C-c x         org-capture

- C-c R         lsp-bridge 变量、函数改名
- C-c &         org-mode 链接跳转返回
- C-c /         webjump

- C-c u f       +unfill-paragraph

- C-c C-c       golang、elisp、org-src 运行代码
- C-c C-d       golang doc

